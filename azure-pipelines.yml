# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'Ubuntu 16.04'
jobs:
- job: build
  steps:
  - script: |
       sudo apt-get install lsb-release
       wget https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest_all.deb
       sudo dpkg -i cvmfs-release-latest_all.deb
       rm -f cvmfs-release-latest_all.deb
       sudo apt-get update
       sudo apt-get install cvmfs cvmfs-config-default
       sudo cvmfs_config setup
       echo  "CVMFS_REPOSITORIES=lhcb.cern.ch,grid.cern.ch,sft.cern.ch" | sudo tee -a  /etc/cvmfs/default.local > /dev/null
       echo  "CVMFS_HTTP_PROXY=DIRECT"  | sudo tee -a  /etc/cvmfs/default.local > /dev/null
       sudo service autofs restart
       sudo cvmfs_config probe
    displayName: 'install cvmfs'
  - script: |
       docker  create -v  osya --name ostap-build  gitlab-registry.cern.ch/lhcb-core/lbdocker/slc6-build:latest
       docker cp  .  ostap-build:/osya
    displayName: 'docker container'
  - script: |
       docker run --rm   -v /cvmfs:/cvmfs --volumes-from ostap-build -u:0 gitlab-registry.cern.ch/lhcb-core/lbdocker/slc6-build:latest /bin/bash -c "cd /osya/ && ./scripts/bootstrap"
       docker cp  ostap-build:/osya/build .
    name: build
    displayName: 'build stage'
- job: test 
  - script: |
       docker run --rm   -v /cvmfs:/cvmfs --volumes-from ostap-build -u:0 gitlab-registry.cern.ch/lhcb-core/lbdocker/slc6-build:latest /bin/bash -c "cd /osya/ && ./scripts/test"
    displayName: 'test stage'
  - script: |
       docker cp  ostap-build:/osya/build .
    displayName: 'copy build result'
  - task: PublishPipelineArtifact@0
    inputs:
     artifactName: 'test'
     targetPath: '$(System.DefaultWorkingDirectory)/build'
